<?php
// @codingStandardsIgnoreFile

/** @var $block Magento\Backend\Block\Template */
/** @var $dataViewModel Smile\ScopedEav\ViewModel\Data */
$catalogViewModel = $block->getData('catalog_view_model');
?>
<script>
require([
    "jquery",
    'Magento_Ui/js/modal/alert',
    'Magento_Ui/js/modal/prompt',
    'uiRegistry',
    "collapsable",
    "prototype"
], function(jQuery, alert, prompt, registry){

function toggleApplyVisibility(select) {
    if ($(select).value == 1) {
        $(select).next('select').removeClassName('no-display');
        $(select).next('select').removeClassName('ignore-validate');

    } else {
        $(select).next('select').addClassName('no-display');
        $(select).next('select').addClassName('ignore-validate');
        var options = $(select).next('select').options;
        for( var i=0; i < options.length; i++) {
            options[i].selected = false;
        }
    }
}

function checkOptionsPanelVisibility(){
    if($('manage-options-panel')){
        var panelId = 'manage-options-panel',
            panel = $(panelId),
            panelFieldSet = panel.up('.fieldset'),
            activePanelClass = 'selected-type-options';

        if($('frontend_input') && ($('frontend_input').value=='select' || $('frontend_input').value=='multiselect')){
            panelFieldSet.show();
            jQuery(panel).addClass(activePanelClass);
            registry.get(panelId, function () {
                jQuery('#' + panelId).trigger('render');
            });
        }
        else {
            panelFieldSet.hide();
            jQuery(panel).removeClass(activePanelClass);
        }
    }
}

function bindAttributeInputType()
{
    checkOptionsPanelVisibility();
    switchDefaultValueField();

    $('is_html_allowed_on_front').disabled = true;
    $('is_wysiwyg_enabled').disabled = true;
    $('frontend_class').value = '';
    $('frontend_class').disabled = true;

    if ($('frontend_input').value == 'textarea') {
        $('is_html_allowed_on_front').disabled = false;
        $('is_wysiwyg_enabled').disabled = false;
    } else if ($('frontend_input').value == 'text') {
        $('frontend_class').value = '';
        $('frontend_class').disabled = false;
    }
}

function switchDefaultValueField()
{
    if (!$('frontend_input')) {
        return;
    }

    var currentValue = $('frontend_input').value;

    var defaultValueTextVisibility = false;
    var defaultValueTextareaVisibility = false;
    var defaultValueDateVisibility = false;
    var defaultValueYesnoVisibility = false;
    var scopeVisibility = true;

    switch (currentValue) {
        case 'select':
            optionDefaultInputType = 'radio';
            break;

        case 'multiselect':
            optionDefaultInputType = 'checkbox';
            break;

        case 'date':
            defaultValueDateVisibility = true;
            break;

        case 'boolean':
            defaultValueYesnoVisibility = true;
            break;

        case 'textarea':
            defaultValueTextareaVisibility = true;
            break;

        case 'media_image':
            defaultValueTextVisibility = false;
            break;
        case 'price':
            scopeVisibility = false;
        default:
            defaultValueTextVisibility = true;
            break;
    }

    switch (currentValue) {
        case 'media_image':
            setRowVisibility('is_required', false);
            setRowVisibility('is_unique', false);
            setRowVisibility('frontend_class', false);
        break;

        <?php foreach ($catalogViewModel->getAttributeHiddenFields() as $type => $fields): ?>
            case '<?php /* @escapeNotVerified */ echo $type; ?>':
                <?php foreach ($fields as $one): ?>
                    <?php if ($one == '_default_value'): ?>
                        defaultValueTextVisibility =
                        defaultValueTextareaVisibility =
                        defaultValueDateVisibility =
                        defaultValueYesnoVisibility = false;
                    <?php elseif ($one == '_scope'): ?>
                        scopeVisibility = false;
                    <?php else: ?>
                        setRowVisibility('<?php /* @escapeNotVerified */ echo $one; ?>', false);
                    <?php endif; ?>
                <?php endforeach; ?>
            break;
        <?php endforeach; ?>

        default:
            showDefaultRows();
        break;
    }

    setRowVisibility('default_value_text', defaultValueTextVisibility);
    setRowVisibility('default_value_textarea', defaultValueTextareaVisibility);
    setRowVisibility('default_value_date', defaultValueDateVisibility);
    setRowVisibility('default_value_yesno', defaultValueYesnoVisibility);
    setRowVisibility('is_global', scopeVisibility);

    var elems = document.getElementsByName('default[]');
    for (var i = 0; i < elems.length; i++) {
        elems[i].type = optionDefaultInputType;
    }
}

function showDefaultRows()
{
    setRowVisibility('is_required', true);
    setRowVisibility('is_unique', true);
    setRowVisibility('frontend_class', true);
}

function setRowVisibility(id, isVisible)
{
    if ($(id)) {
        var td = $(id).parentNode;
        var tr = $(td.parentNode);

        if (isVisible) {
            tr.show();
        } else {
            tr.blur();
            tr.hide();
        }
    }
}

function updateRequriedOptions()
{
    if ($F('frontend_input')=='select' && $F('is_required')==1) {
        $('option-count-check').addClassName('required-options-count');
    } else {
        $('option-count-check').removeClassName('required-options-count');
    }
}

function saveAttributeInNewSet(promptMessage)
{
    var newAttributeSetName;

    prompt({
        content: promptMessage,
        actions: {
            confirm: function(val) {
                newAttributeSetName = val;

                if (!newAttributeSetName) {
                    return;
                }

                var rules = ['required-entry', 'validate-no-html-tags'];
                for (var i = 0; i < rules.length; i++) {
                    if (!jQuery.validator.methods[rules[i]](newAttributeSetName)) {
                        alert({
                            content: jQuery.validator.messages[rules[i]]
                        });

                        return;
                    }
                }

                var newAttributeSetNameInputId = 'new_attribute_set_name';

                if ($(newAttributeSetNameInputId)) {
                    $(newAttributeSetNameInputId).value = newAttributeSetName;
                } else {
                    $('edit_form').insert({
                        top: new Element('input', {
                            type: 'hidden',
                            id: newAttributeSetNameInputId,
                            name: 'new_attribute_set_name',
                            value: newAttributeSetName
                        })
                    });
                }
                // Temporary solution will replaced after refactoring of attributes functionality
                jQuery('#edit_form').triggerHandler('save');
            }
        }
    });
}

function refreshOptions()
{
    jQuery('#manage-options-panel').trigger("render");
}

if($('frontend_input')){
    Event.observe($('frontend_input'), 'change', updateRequriedOptions);
    Event.observe($('frontend_input'), 'change', bindAttributeInputType);
}

if ($('is_required')) {
    Event.observe($('is_required'), 'change', updateRequriedOptions);
}

jQuery(function($) {
    bindAttributeInputType();
    // @todo: refactor collapsable component
    $('.attribute-popup .collapse, [data-role="advanced_fieldset-content"]')
        .collapsable()
        .collapse('hide');

    setTimeout(refreshOptions, 500)
});

window.saveAttributeInNewSet = saveAttributeInNewSet;
window.updateRequriedOptions = updateRequriedOptions;
window.setRowVisibility = setRowVisibility;
window.showDefaultRows = showDefaultRows;
window.switchDefaultValueField = switchDefaultValueField;
window.bindAttributeInputType = bindAttributeInputType;
window.checkOptionsPanelVisibility = checkOptionsPanelVisibility;
window.toggleApplyVisibility = toggleApplyVisibility;

});
</script>
